{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\josep\\\\Documents\\\\globe technologies\\\\products\\\\agents\\\\church-assistant\\\\frontend\\\\src\\\\components\\\\ChatBox.jsx\",\n  _s = $RefreshSig$();\n// File: /src/components/ChatBox.jsx\nimport React, { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport TextField from \"@mui/material/TextField\";\nimport IconButton from \"@mui/material/IconButton\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport Paper from \"@mui/material/Paper\";\nimport Typography from \"@mui/material/Typography\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    text: \"Hi there! How can I assist you today?\",\n    sender: \"bot\"\n  }]);\n  const [input, setInput] = useState(\"\");\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const userMsg = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages(prev => [...prev, userMsg]);\n    setInput(\"\");\n    try {\n      const res = await axios.post(\"http://localhost:5000/ask\", {\n        question: input\n      });\n      const botReply = {\n        text: res.data.response,\n        sender: \"bot\"\n      };\n      setMessages(prev => [...prev, botReply]);\n    } catch (err) {\n      const errorReply = {\n        text: \"Sorry, something went wrong. Please try again later.\",\n        sender: \"bot\"\n      };\n      setMessages(prev => [...prev, errorReply]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: \"600px\",\n      mx: \"auto\",\n      mt: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        p: 2,\n        height: \"400px\",\n        overflowY: \"auto\",\n        mb: 2\n      },\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(Typography, {\n        align: msg.sender === \"bot\" ? \"left\" : \"right\",\n        sx: {\n          mb: 1,\n          p: 1,\n          backgroundColor: msg.sender === \"bot\" ? \"#f0f0f0\" : \"#d1e7dd\",\n          borderRadius: 2,\n          maxWidth: \"75%\",\n          ml: msg.sender === \"bot\" ? 0 : \"auto\"\n        },\n        children: msg.text\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"flex\",\n        gap: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        fullWidth: true,\n        variant: \"outlined\",\n        placeholder: \"Ask me something...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && handleSend()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        onClick: handleSend,\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"jql6z5BWYTYrU+X8ozZL27C5YdM=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","Box","TextField","IconButton","SendIcon","Paper","Typography","axios","jsxDEV","_jsxDEV","ChatBox","_s","messages","setMessages","text","sender","input","setInput","handleSend","trim","userMsg","prev","res","post","question","botReply","data","response","err","errorReply","sx","maxWidth","mx","mt","children","elevation","p","height","overflowY","mb","map","msg","i","align","backgroundColor","borderRadius","ml","fileName","_jsxFileName","lineNumber","columnNumber","display","gap","fullWidth","variant","placeholder","value","onChange","e","target","onKeyDown","key","color","onClick","_c","$RefreshReg$"],"sources":["C:/Users/josep/Documents/globe technologies/products/agents/church-assistant/frontend/src/components/ChatBox.jsx"],"sourcesContent":["// File: /src/components/ChatBox.jsx\r\nimport React, { useState } from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport axios from \"axios\";\r\n\r\nconst ChatBox = () => {\r\n  const [messages, setMessages] = useState([\r\n    { text: \"Hi there! How can I assist you today?\", sender: \"bot\" }\r\n  ]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  \r\nconst handleSend = async () => {\r\n  if (!input.trim()) return;\r\n\r\n  const userMsg = { text: input, sender: \"user\" };\r\n  setMessages((prev) => [...prev, userMsg]);\r\n  setInput(\"\");\r\n\r\n  try {\r\n    const res = await axios.post(\"http://localhost:5000/ask\", {\r\n      question: input\r\n    });\r\n\r\n    const botReply = { text: res.data.response, sender: \"bot\" };\r\n    setMessages((prev) => [...prev, botReply]);\r\n  } catch (err) {\r\n    const errorReply = {\r\n      text: \"Sorry, something went wrong. Please try again later.\",\r\n      sender: \"bot\"\r\n    };\r\n    setMessages((prev) => [...prev, errorReply]);\r\n  }\r\n};\r\n\r\n  return (\r\n    <Box sx={{ maxWidth: \"600px\", mx: \"auto\", mt: 4 }}>\r\n      <Paper elevation={3} sx={{ p: 2, height: \"400px\", overflowY: \"auto\", mb: 2 }}>\r\n        {messages.map((msg, i) => (\r\n          <Typography\r\n            key={i}\r\n            align={msg.sender === \"bot\" ? \"left\" : \"right\"}\r\n            sx={{\r\n              mb: 1,\r\n              p: 1,\r\n              backgroundColor: msg.sender === \"bot\" ? \"#f0f0f0\" : \"#d1e7dd\",\r\n              borderRadius: 2,\r\n              maxWidth: \"75%\",\r\n              ml: msg.sender === \"bot\" ? 0 : \"auto\"\r\n            }}\r\n          >\r\n            {msg.text}\r\n          </Typography>\r\n        ))}\r\n      </Paper>\r\n\r\n      <Box sx={{ display: \"flex\", gap: 1 }}>\r\n        <TextField\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          placeholder=\"Ask me something...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={(e) => e.key === \"Enter\" && handleSend()}\r\n        />\r\n        <IconButton color=\"primary\" onClick={handleSend}>\r\n          <SendIcon />\r\n        </IconButton>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}